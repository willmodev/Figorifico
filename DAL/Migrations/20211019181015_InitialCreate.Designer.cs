// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(FigorificoContext))]
    [Migration("20211019181015_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.CategoryProduct", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCategory");

                    b.HasIndex("IdType");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("Entity.Client", b =>
                {
                    b.Property<string>("Indentification")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Indentification");

                    b.HasIndex("UserName");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Entity.Domiciliary", b =>
                {
                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Identification");

                    b.HasIndex("UserName");

                    b.ToTable("Domiciliaries");
                });

            modelBuilder.Entity("Entity.Invoice", b =>
                {
                    b.Property<string>("IdInvoice")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("DueDate")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdClient")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SaleDate")
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdInvoice");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Entity.InvoiceDetail", b =>
                {
                    b.Property<int>("IdDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("IdInvoice")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<decimal>("TolalDetail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetail");

                    b.HasIndex("IdInvoice");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iva")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entity.TypeProduct", b =>
                {
                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdType");

                    b.ToTable("TypeProduct");
                });

            modelBuilder.Entity("Entity.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Vehicle", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Placa");

                    b.HasIndex("Identification");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Entity.CategoryProduct", b =>
                {
                    b.HasOne("Entity.TypeProduct", "TypeProduct")
                        .WithMany()
                        .HasForeignKey("IdType");

                    b.Navigation("TypeProduct");
                });

            modelBuilder.Entity("Entity.Client", b =>
                {
                    b.HasOne("Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domiciliary", b =>
                {
                    b.HasOne("Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.InvoiceDetail", b =>
                {
                    b.HasOne("Entity.Invoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("IdInvoice");
                });

            modelBuilder.Entity("Entity.Vehicle", b =>
                {
                    b.HasOne("Entity.Domiciliary", "Domiciliary")
                        .WithMany()
                        .HasForeignKey("Identification");

                    b.Navigation("Domiciliary");
                });

            modelBuilder.Entity("Entity.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
